DROP DATABASE IF EXISTS INVENTORY;

CREATE DATABASE IF NOT EXISTS INVENTORY;

USE INVENTORY;


CREATE TABLE IF NOT EXISTS ADDRESS(
  ADDRESS_ID INT(10) AUTO_INCREMENT NOT NULL PRIMARY KEY ,
  ADDRESS_LINE1 VARCHAR(100) NOT NULL,
  ADDRESS_LINE2 VARCHAR(100) ,
  COUNTY VARCHAR(50),
  CITY VARCHAR(50) NOT NULL ,
  STATE CHAR(2) NOT NULL,
  ZIPCODE CHAR(10) NOT NULL,
  PACKING_SITE INT(1) NOT NULL,
  PACKING_SITE_NAME VARCHAR(100)
);


CREATE TABLE IF NOT EXISTS GENERAL_SETTINGS(
  NAME VARCHAR(64) NOT NULL PRIMARY KEY,
  VALUE VARCHAR(64) NOT NULL

);
INSERT INTO GENERAL_SETTINGS VALUES ('PULL_SHEET_CONFIRM','TRUE');
SELECT * from GENERAL_SETTINGS;



CREATE TABLE IF NOT EXISTS PACKING_SITE_NOTES(
  ADDRESS_ID INT(10)  NOT NULL REFERENCES ADDRESS(ADDRESS_ID),
  NOTE_ID INT(10) AUTO_INCREMENT PRIMARY KEY ,
  NOTE TEXT
);

SELECT * from PACKING_SITE_NOTES;
SELECT * from ADDRESS;

DELETE from PACKING_SITE_NOTES where ADDRESS_ID=4;
INSERT INTO PACKING_SITE_NOTES VALUES (4, DEFAULT , 'note 1');

INSERT INTO PACKING_SITE_NOTES VALUES (4, DEFAULT , 'note 2');

CREATE TABLE IF NOT EXISTS USERS(
  USERNAME VARCHAR(50) NOT NULL PRIMARY KEY,
  FIRSTNAME VARCHAR(50) NOT NULL,
  LASTNAME VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(255) NOT NULL,
  EMAIL VARCHAR(50) NOT NULL,
  ADDRESS_ID INT(10) REFERENCES ADDRESS(ADDRESS_ID),
  TYPE SMALLINT NOT NULL,
  PENDING_FLAG SMALLINT

);
-- delete from users;
insert into USERS values('nhasan','nadia','hasan','$2y$10$RaAU5nvEKETWBd0OUbJF7uq.usz99J5iV6Ie.x4tQe0ZlUaVFAk1G','nhasan@gmail.com',0,1,1);
insert into USERS values('jane','jane','john','$2y$10$TIQVs1PB5ZKo18IDmDnQCe4tULD/fYA.I/255a56Fhwu2ul56s1zG','jj@gmail.com',0,2,1);
insert into USERS values('bob','bob','may','$2y$10$TIQVs1PB5ZKo18IDmDnQCe4tULD/fYA.I/255a56Fhwu2ul56s1zG','jj@gmail.com',0,3,1);

select * from USERS;


CREATE TABLE IF NOT EXISTS VOLUNTEER(

  USERNAME VARCHAR(50) NOT NULL REFERENCES USERS(USERNAME),
  VOLUNTEER_ID INT(10)  NOT NULL ,
  PRIMARY KEY (USERNAME)

);

CREATE TABLE IF NOT EXISTS EMPLOYEE(


  USERNAME VARCHAR(50) NOT NULL REFERENCES USERS(USERNAME) ,
  EMPLOYEE_ID VARCHAR(50) NOT NULL,
  EMPLOYEE_INITIALS CHAR(2) NOT NULL,
  PRIMARY KEY (USERNAME)

);


CREATE TABLE IF NOT EXISTS CHECK_IN_TIMES(
  USERNAME VARCHAR(50) NOT NULL REFERENCES USERS(USERNAME)  ,
  VOLUNTEER_ID INT(10)  NOT NULL REFERENCES VOLUNTEER(VOLUNTEER_ID),
  CHECK_IN_DATE DATE NOT NULL,
  CHECK_IN_TIME TIME NOT NULL,
  CURRENT_ADDRESS_ID INT(10) NOT NULL REFERENCES ADDRESS(ADDRESS_ID),
  PRIMARY KEY (USERNAME, VOLUNTEER_ID)

);

CREATE TABLE IF NOT EXISTS TYPE(
  BARCODE CHAR(25) NOT NULL PRIMARY KEY ,
  TYPE CHAR(1) NOT NULL
);

select * from type;
DELETE FROM TYPE WHERE BARCODE=0;

INSERT INTO TYPE VALUES('000','c');

INSERT INTO TYPE VALUES(111,'c');
INSERT INTO TYPE VALUES(222,'c');

INSERT INTO TYPE VALUES(333,'c');
INSERT INTO TYPE VALUES(444,'c');
INSERT INTO TYPE VALUES(555,'c');
INSERT INTO TYPE VALUES(666,'c');
INSERT INTO TYPE VALUES(777,'c');
INSERT INTO TYPE VALUES(888,'c');
INSERT INTO TYPE VALUES(999,'c');

INSERT INTO TYPE VALUES('0000','p');

INSERT INTO TYPE VALUES('1000','p');
INSERT INTO TYPE VALUES('2000','p');

INSERT INTO TYPE VALUES('3000','p');
INSERT INTO TYPE VALUES('4000','p');
INSERT INTO TYPE VALUES('5000','p');
INSERT INTO TYPE VALUES('6000','p');
INSERT INTO TYPE VALUES('7000','p');
INSERT INTO TYPE VALUES('8000','p');
INSERT INTO TYPE VALUES('9000','p');




CREATE TABLE IF NOT EXISTS DONATION (

  DONATION_ID INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  ACCOUNT_NUM DECIMAL(10) NOT NULL,
  DONOR_NAME VARCHAR(100) NOT NULL,
  DONOR_ADDRESS_ID DECIMAL(10) NOT NULL REFERENCES ADDRESS(ADDRESS_ID),
  DONATION_DATE DATE NOT NULL,
  EMPLOYEE_ID DECIMAL(10) NOT NULL REFERENCES EMPLOYEE(EMPLOYEE_ID) ,
  TOTAL_PRICE DECIMAL(6,2) NOT NULL,
  NOTES TEXT

);
SELECT * FROM DONATION;
SELECT * from ITEMS;
SELECT * from ADDRESS;
INSERT INTO ADDRESS VALUES(DEFAULT,'1760 County Line Rd.','','','lakeland','FL','33811','0','NULL');
INSERT INTO DONATION VALUES(DEFAULT,65018,'Amazon Fulfillment Center', 6, 2017-11-18, 123456, 0.0,'');

INSERT INTO ADDRESS VALUES(DEFAULT,'290 Cypress Gardens Blvd','','','Winter Haven','FL','33880','0','NULL');
INSERT INTO DONATION VALUES(DEFAULT,'65018','Coldwell Banker',7,'2017-11-16','18372',0.0,' ');


INSERT INTO ADDRESS VALUES(DEFAULT,'700 Ave B SW','','','Winter Haven','FL','33880','0','NULL');
INSERT INTO DONATION VALUES(DEFAULT,'65018','Epcar',8,'2017-11-10','123456',0.0,' ');Donation Id 6

INSERT INTO ADDRESS VALUES(DEFAULT,'4335 Northside Frontage Rd.','','','lakeland','FL','33810','0','NULL');
INSERT INTO DONATION VALUES(DEFAULT,'65016','centimark',9,'2017-11-11','123456',0.0,' ');Donation Id 7
INSERT INTO ADDRESS VALUES(DEFAULT,'4900 North Ridge Trail ','','','Davenport','FL','33897','0','NULL');
INSERT INTO DONATION VALUES(DEFAULT,'65016','Walmart Distribution Center',10,'2017-11-17','123456',0.0,' ');Donation Id 8


CREATE TABLE IF NOT EXISTS PURCHASE (

  PURCHASE_ID INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  PURCHASE_DATE DATE NOT NULL,
  EMPLOYEE_ID DECIMAL(10) NOT NULL REFERENCES EMPLOYEE(EMPLOYEE_ID) ,
  TOTAL_PRICE DECIMAL(6,2) NOT NULL,
  STORE_BOUGHT VARCHAR(100) ,
  NOTES TEXT

);
DROP TABLE IF EXISTS PURCHASE;

CREATE TABLE IF NOT EXISTS PURCHASED_ITEMS (

  ITEMS_ID INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  PURCHASE_ID INT(10) NOT NULL REFERENCES PURCHASE(PURCHASE_ID),
  BARCODE CHAR(25) NOT NULL REFERENCES TYPE(BARCODE),
  EXPIRATION_DATE DATE,
  ITEM_COUNT DECIMAL(3)

);

CREATE TABLE IF NOT EXISTS PRODUCT(

  PRODUCT_BARCODE CHAR(25) NOT NULL  REFERENCES TYPE(BARCODE),
  PRODUCT_NAME VARCHAR(100) NOT NULL,
  PRODUCT_PRICE DECIMAL(5,2) NOT NULL,
  QUANTITY_IN_STOCK DECIMAL(10) NOT NULL DEFAULT 0,
  MIN_QUANTITY_IN_STOCK DECIMAL(10) NOT NULL DEFAULT 3000,
  PROD_DESCRIPTION TEXT,
  PRIMARY KEY (PRODUCT_BARCODE)

);

SELECT * from PRODUCT;
INSERT INTO PRODUCT VALUES ('0000', 'Chef Boyardee', 0.83, 0, DEFAULT , '');
DELETE from PRODUCT where PRODUCT_BARCODE=0000;
INSERT INTO PRODUCT VALUES ('1000', 'Trail Mix', 0.32, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('2000', 'Berry Pop Tarts', 1.0, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('3000', 'Cinnamon Pop Tarts', 1.0, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('4000', 'Peanut Butter Crackers', 0.17, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('5000', 'Cheddar Cheese Crackers', 0.17, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('6000', 'Breakfast Bars', 0.15, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('7000', 'Fruit', 0.2, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('8000', 'Apple Sauce', 0.4, 0, DEFAULT , '');
INSERT INTO PRODUCT VALUES ('9000', 'Apple Juice', 0.7, 0, DEFAULT , '');


CREATE TABLE IF NOT EXISTS CONTAINER_TYPE(


  CONTAINER_TYPE_ID INT(10) AUTO_INCREMENT PRIMARY KEY ,
  CONTAINER_TYPE
    VARCHAR(50) NOT NULL

);

INSERT INTO CONTAINER_TYPE VALUES (1, 'packs');
INSERT INTO CONTAINER_TYPE VALUES (2, 'pouches');
DELETE from CONTAINER_TYPE where CONTAINER_TYPE_ID=3;
SELECT * from CONTAINER_TYPE;


CREATE TABLE IF NOT EXISTS CASE_TABLE(

  CASE_BARCODE CHAR(25) NOT NULL REFERENCES TYPE(BARCODE) ,
  PRODUCT_BARCODE CHAR(25) NOT NULL REFERENCES PRODUCT(PRODUCT_BARCODE),
  CASE_NAME VARCHAR(100) NOT NULL,
  CASE_TYPE_ID INT(10) NOT NULL REFERENCES CONTAINER_TYPE(CONTAINER_TYPE_ID),
  COUNT_PER_CASE DECIMAL(10) NOT NULL DEFAULT 1,
  QUANTITY_IN_STOCK DECIMAL(10) NOT NULL DEFAULT 0,
  CASE_PRICE DECIMAL(5,2) NOT NULL,
  PRIMARY KEY (CASE_BARCODE)
);

SELECT * FROM CASE_TABLE;
INSERT into CASE_TABLE VALUES ('000', '0000', 'Chef Boyardee(Sams)', 1, 12,0,9.98 );
INSERT into CASE_TABLE VALUES ('111', '1000', 'Trail Mix(Sams)', 1, 30,0,9.67 );
INSERT into CASE_TABLE VALUES ('222', '2000', 'Berry Pop Tarts', 1, 18,0,18.0 );
INSERT into CASE_TABLE VALUES ('333', '3000', 'Cinnamon Pop Tarts', 1, 18,0,18.0 );
INSERT into CASE_TABLE VALUES ('444', '4000', 'Peanut Butter Crackers(Sams)', 1, 40,0,6.88);
INSERT into CASE_TABLE VALUES ('555', '5000', 'Cheddar Cheese Crackers(Sams)', 1, 40,0,6.88 );
INSERT into CASE_TABLE VALUES ('666', '6000', 'Breakfast Bars', 1,60,0,8.98 );
INSERT into CASE_TABLE VALUES ('777', '7000', 'Fruit', 1, 48,0,10.0 );
INSERT into CASE_TABLE VALUES ('888', '8000', 'Apple Sauce', 1, 45,0,19.0 );
INSERT into CASE_TABLE VALUES ('999', '9000', 'Apple Juice', 1, 48,0,34.0 );



CREATE TABLE IF NOT EXISTS ITEMS(

  ITEM_ID INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  DONATION_ID INT(10) NOT NULL  REFERENCES DONATION(DONATION_ID),
  BARCODE CHAR(25) NOT NULL  REFERENCES TYPE(BARCODE),
  EXPIRATION_DATE DATE,
  ITEM_COUNT DECIMAL(3) NOT NULL DEFAULT 1

);
DROP TABLE IF EXISTS EXTRA_ITEMS;

#Quantity in stock is the number of cases for extra_items that are cases.
CREATE TABLE IF NOT EXISTS EXTRA_ITEMS(

  EXTRA_ITEM_ID INT(10) NOT NULL AUTO_INCREMENT PRIMARY KEY ,
  EXTRA_ITEM_NAME VARCHAR(100) NOT NULL,
  CASE_OR_NOT INT(1) NOT NULL,
  EXTRA_ITEM_COUNT_PER_CASE DECIMAL(10) DEFAULT 1,
  QUANTITY_IN_STOCK DECIMAL(10) NOT NULL DEFAULT 0

);
SELECT * FROM EXTRA_ITEMS;

UPDATE EXTRA_ITEMS SET QUANTITY_IN_STOCK='10' WHERE EXTRA_ITEM_ID= '15';

DELETE from EXTRA_ITEMS where CASE_OR_NOT=0;
-- DROP TABLE IF EXISTS PULL_SHEETS_TEMPLATE;



CREATE TABLE IF NOT EXISTS REGIFTED(
  REGIFTED_ID INT(10) AUTO_INCREMENT NOT NULL PRIMARY KEY

);

# DROP TABLE IF EXISTS PULL_SHEET;
CREATE TABLE IF NOT EXISTS PULL_SHEET(
  PULL_SHEET_ID INT(10) AUTO_INCREMENT NOT NULL PRIMARY KEY,
  TEMPLATE_ID INT(10)  NOT NULL REFERENCES PULL_SHEETS_TEMPLATE(TEMPLATE_ID),
  PACKING_SITE_ADDRESS_ID INT(10) NOT NULL REFERENCES ADDRESS(ADDRESS_ID),
  DELIVERY_DATE DATE NOT NULL ,
  NUM_PACKING_WEEKS DECIMAL NOT NULL ,
  NUM_CELLS_PER_WEEK DECIMAL NOT NULL,
  TOTAL_FOR_PACKING DECIMAL NOT NULL


);


-- DROP TABLE IF EXISTS PULL_SHEET;
# DROP TABLE IF EXISTS PULL_LIST_TEMPLATE;


CREATE TABLE IF NOT EXISTS PULL_LIST_TEMPLATE(

  TEMPLATE_ID INT(10)  NOT NULL  AUTO_INCREMENT PRIMARY KEY ,
  TEMPLATE_NAME VARCHAR(100) NOT NULL ,
  TEMPLATE_DATE DATETIME NOT NULL

);
# DROP TABLE IF EXISTS PULL_LIST_TEMPLATE_ITEMS;


CREATE TABLE IF NOT EXISTS PULL_LIST_TEMPLATE_ITEMS(

  ITEM_ID INT(10)  NOT NULL AUTO_INCREMENT ,
  TEMPLATE_ID INT(10)  NOT NULL REFERENCES PULL_SHEETS_TEMPLATE(TEMPLATE_ID),
  CASE_BARCODE CHAR(25) NOT NULL REFERENCES CASE_TABLE(CASE_BARCODE),
  AMOUNT_PER_KIDPACK INT NOT NULL,
  PRIMARY KEY(ITEM_ID, TEMPLATE_ID)

);

-- DROP TABLE IF EXISTS PULL_SHEETS_ITEMS;

CREATE TABLE IF NOT EXISTS CONFIRM_PULLED_ITEMS(
  PULL_SHEET_ID INT(10)  NOT NULL REFERENCES PULL_SHEET(PULL_SHEET_ID),
  USERNAME VARCHAR(50) NOT NULL REFERENCES USERS(USERNAME),
  CASE_BARCODE CHAR(25) NOT NULL REFERENCES TYPE(BARCODE) ,
  NUMBER_OF_CASES_PULLED INT(10) NOT NULL,
  CASE_PULL_DATE DATETIME NOT NULL,
  NUMBER_OF_INDIVIDUAL_ITEMS_PULLED INT(10) NOT NULL

);
INSERT INTO CONFIRM_PULLED_ITEMS VALUES('204','nhasan','000','7', now(), 0);
SELECT * from CONFIRM_PULLED_ITEMS;
delete from CONFIRM_PULLED_ITEMS;
-- DROP TABLE IF EXISTS CONFIRM_PULLED_ITEMS;


SELECT * FROM PRODUCT;
SELECT * FROM CASE_TABLE;
delete from CASE_TABLE where CASE_TYPE_ID=1;
delete from PRODUCT where QUANTITY_IN_STOCK=0;

SELECT * FROM TYPE;
delete from type WHERE type='p';
update type set barcode='000' where BARCODE='5050';
select * from DONATION;

DELETE from DONATION where DONOR_NAME='nadia';
SELECT * FROM PULL_LIST_TEMPLATE;

DELETE  from PULL_LIST_TEMPLATE WHERE TEMPLATE_ID=1;
DELETE  from PULL_LIST_TEMPLATE WHERE TEMPLATE_NAME LIKE 'template';

select * from PULL_LIST_TEMPLATE_ITEMS;
DELETE from PULL_LIST_TEMPLATE_ITEMS where TEMPLATE_ID=1;
SELECT * FROM PULL_SHEET;
SELECT * FROM ADDRESS;
SELECT * from PULL_SHEET;
DELETE  from PULL_SHEET where TEMPLATE_ID=0;
SELECT * FROM PACKING_SITE_NOTES;
SELECT * from ADDRESS;
show tables;



SELECT * FROM CASE_TABLE WHERE CASE_BARCODE=091;
SELECT * FROM PULL_LIST_TEMPLATE_ITEMS WHERE TEMPLATE_ID='1';
SELECT * FROM CONFIRM_PULLED_ITEMS;

DELETE  from PULL_LIST_TEMPLATE_ITEMS;



SELECT * FROM ADDRESS WHERE ADDRESS_ID='4';
